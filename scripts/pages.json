[{"name":"constructor(value: T)","description":"com.dshatz.composempp.ImmutableWrapper.ImmutableWrapper","location":"lib/com.dshatz.composempp/-immutable-wrapper/-immutable-wrapper.html","searchKeys":["ImmutableWrapper","constructor(value: T)","com.dshatz.composempp.ImmutableWrapper.ImmutableWrapper"]},{"name":"data class ImmutableWrapper<T>(val value: T)","description":"com.dshatz.composempp.ImmutableWrapper","location":"lib/com.dshatz.composempp/-immutable-wrapper/index.html","searchKeys":["ImmutableWrapper","data class ImmutableWrapper<T>(val value: T)","com.dshatz.composempp.ImmutableWrapper"]},{"name":"fun <T> T.toImmutableWrapper(): ImmutableWrapper<T>","description":"com.dshatz.composempp.toImmutableWrapper","location":"lib/com.dshatz.composempp/to-immutable-wrapper.html","searchKeys":["toImmutableWrapper","fun <T> T.toImmutableWrapper(): ImmutableWrapper<T>","com.dshatz.composempp.toImmutableWrapper"]},{"name":"fun AutoSizeText(text: AnnotatedString, modifier: Modifier = Modifier, suggestedFontSizes: ImmutableWrapper<List<TextUnit>> = emptyList<TextUnit>().toImmutableWrapper(), minTextSize: TextUnit = TextUnit.Unspecified, maxTextSize: TextUnit = TextUnit.Unspecified, stepGranularityTextSize: TextUnit = TextUnit.Unspecified, alignment: Alignment = Alignment.TopStart, color: Color = Color.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, lineSpacingRatio: Float = 0.1f, maxLines: Int = Int.MAX_VALUE, inlineContent: ImmutableWrapper<Map<String, InlineTextContent>> = mapOf<String, InlineTextContent>().toImmutableWrapper(), onTextLayout: (TextLayoutResult) -> Unit = {}, style: TextStyle = LocalTextStyle.current)","description":"com.dshatz.composempp.AutoSizeText","location":"lib/com.dshatz.composempp/-auto-size-text.html","searchKeys":["AutoSizeText","fun AutoSizeText(text: AnnotatedString, modifier: Modifier = Modifier, suggestedFontSizes: ImmutableWrapper<List<TextUnit>> = emptyList<TextUnit>().toImmutableWrapper(), minTextSize: TextUnit = TextUnit.Unspecified, maxTextSize: TextUnit = TextUnit.Unspecified, stepGranularityTextSize: TextUnit = TextUnit.Unspecified, alignment: Alignment = Alignment.TopStart, color: Color = Color.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, lineSpacingRatio: Float = 0.1f, maxLines: Int = Int.MAX_VALUE, inlineContent: ImmutableWrapper<Map<String, InlineTextContent>> = mapOf<String, InlineTextContent>().toImmutableWrapper(), onTextLayout: (TextLayoutResult) -> Unit = {}, style: TextStyle = LocalTextStyle.current)","com.dshatz.composempp.AutoSizeText"]},{"name":"fun AutoSizeText(text: String, modifier: Modifier = Modifier, suggestedFontSizes: ImmutableWrapper<List<TextUnit>> = emptyList<TextUnit>().toImmutableWrapper(), minTextSize: TextUnit = TextUnit.Unspecified, maxTextSize: TextUnit = TextUnit.Unspecified, stepGranularityTextSize: TextUnit = TextUnit.Unspecified, alignment: Alignment = Alignment.TopStart, color: Color = Color.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, lineSpacingRatio: Float = 0.1f, maxLines: Int = Int.MAX_VALUE, onTextLayout: (TextLayoutResult) -> Unit = {}, style: TextStyle = LocalTextStyle.current)","description":"com.dshatz.composempp.AutoSizeText","location":"lib/com.dshatz.composempp/-auto-size-text.html","searchKeys":["AutoSizeText","fun AutoSizeText(text: String, modifier: Modifier = Modifier, suggestedFontSizes: ImmutableWrapper<List<TextUnit>> = emptyList<TextUnit>().toImmutableWrapper(), minTextSize: TextUnit = TextUnit.Unspecified, maxTextSize: TextUnit = TextUnit.Unspecified, stepGranularityTextSize: TextUnit = TextUnit.Unspecified, alignment: Alignment = Alignment.TopStart, color: Color = Color.Unspecified, fontStyle: FontStyle? = null, fontWeight: FontWeight? = null, fontFamily: FontFamily? = null, letterSpacing: TextUnit = TextUnit.Unspecified, textDecoration: TextDecoration? = null, lineSpacingRatio: Float = 0.1f, maxLines: Int = Int.MAX_VALUE, onTextLayout: (TextLayoutResult) -> Unit = {}, style: TextStyle = LocalTextStyle.current)","com.dshatz.composempp.AutoSizeText"]},{"name":"operator fun <T> ImmutableWrapper<T>.getValue(thisRef: Any?, property: KProperty<*>): T","description":"com.dshatz.composempp.getValue","location":"lib/com.dshatz.composempp/get-value.html","searchKeys":["getValue","operator fun <T> ImmutableWrapper<T>.getValue(thisRef: Any?, property: KProperty<*>): T","com.dshatz.composempp.getValue"]},{"name":"val value: T","description":"com.dshatz.composempp.ImmutableWrapper.value","location":"lib/com.dshatz.composempp/-immutable-wrapper/value.html","searchKeys":["value","val value: T","com.dshatz.composempp.ImmutableWrapper.value"]}]